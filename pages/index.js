import Head from "next/head";

import { useEffect, useState, useRef } from "react";

export default function Home() {
  // eslint-disable-next-line react-hooks/rules-of-hooks
  const nomContactRef = useRef();
  const telContactRef = useRef();
  const nomToUpdateRef = useRef();
  const telToUpdateRef = useRef();

  const [contact, setContacts] = useState([]);
  // const [created, setCreated] = useState(false);
  // const [deleted, setDeleted] = useState(false);
  // const [deletedError, setDeletedError] = useState(false);
  async function addContact(e) {
    e.preventDefault();
    const nomContact = nomContactRef.current.value;
    const telContact = telContactRef.current.value;
    const postData = {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        contact_nom: nomContact,
        contact_telephone: telContact,
      }),
    };
    const res = await fetch("http://localhost:3001/api/repetoires", postData);
    const response = await res.json();
    //   console.log(response);
    if (response.response.message === "success") {
      return {
        redirect: {
          destination: "/",
        },
      };
    }
    const newcontact = response.response.contact;
    // setContacts(response.response.contact);
    // setContacts([
    //   ...contact,
    //   {
    //     contact_id: newcontact.contact_id,
    //     contact_nom: newcontact.contact_nom,
    //     contact_telephone: newcontact.contact_telephone,
    //   },
    // ]);
    // setCreated(true);
    
  }

  async function getContact() {
    const postData = {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    };
    const res = await fetch("http://localhost:3001/api/repetoires", postData);
    const response = await res.json();
    setContacts(response.contact);
    console.log(response);
  }

  // recupérations

  const [id, setId] = useState("");
  const [nom, setNom] = useState("");
  const [telephone, setTelephone] = useState("");

  const getChamps = (id, nom, telephone) => {
    setId(id);
    setNom(nom);
    setTelephone(telephone);
  };

  async function updateContact() {
    const nomUpdate = nomToUpdateRef.current.value;
    const telUpdate = telToUpdateRef.current.value;

    const postData = {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id,
        contact_nom: nomUpdate,
        contact_tel: telUpdate,
      }),
    };

    console.log(postData);
    alert("pause");

    const res = await fetch("http://localhost:3001/api/repetoires", postData);
    const response = await res.json();
    if (response.response.message === "error") return;

    // if (response.response.message === "success") {
    //   return (
    //   formRefup.current.reset(),
    //   setDat(" "),
    //   setHeur(" "),
    //   setLib(" "),
    //   getProducts(),
    //   handleCloseup()

    //   );
    // }
  }

  async function deleteContact(id) {
    if (!id) return;
    const postData = {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: id,
      }),
    };
    const res = await fetch("http://localhost:3001/api/repetoires", postData);
    const response = await res.json();
    // console.log(response.response);
    if (response.response.message === "error") return setDeletedError(true);
    const idToRemove = parseFloat(response.response.id);
    setContacts(contact.filter((a) => a.id !== idToRemove));
    // setDeleted(true);
  }

  useEffect(() => {
    getContact();
  }, []);

  return (
    <>
      <Head>
        <title>Répertoire</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <div className="d-flex justify-content-between m-5">
          <h1 className="text-dark">Mon répertoire</h1>
          <button
            type="button"
            className="btn btn-dark h-25"
            data-bs-toggle="modal"
            data-bs-target="#addContact"
          >
            Nouveau contact
          </button>

          <div
            className="modal fade"
            id="addContact"
            tabIndex={-1}
            aria-labelledby="addContactLabel"
            aria-hidden="true"
          >
            <div className="modal-dialog">
              <div className="modal-content">
                <div className="modal-header">
                  <h1 className="modal-title fs-5" id="addContactLabel">
                    Nouveau contact
                  </h1>
                  <button
                    type="button"
                    className="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <form>
                  <div className="modal-body p-3">
                    <div className="row">
                      <div className="col-6">
                        <label htmlFor="nomContactRef" className="form-label">
                          Nom
                        </label>
                        <input
                          type="text"
                          className="form-control"
                          ref={nomContactRef}
                          required
                        />
                      </div>
                      <div className="col-6">
                        <label htmlFor="telContactRef" className="form-label">
                          Téléphone
                        </label>
                        <input
                          type="tel"
                          className="form-control"
                          ref={telContactRef}
                          required
                        />
                      </div>
                    </div>
                  </div>
                  <div className="modal-footer">
                    <button
                      type="submit"
                      className="btn btn-dark "
                      onClick={addContact}
                    >
                      Ajouter
                    </button>

                    <button className="btn btn-primary" data-bs-dismiss="modal">
                      Annuler
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>

          {/* Modal de modification */}
          <div
            className="modal fade"
            id="updContact"
            tabIndex={-1}
            aria-labelledby="updContactLabel"
            aria-hidden="true"
          >
            <div className="modal-dialog">
              <div className="modal-content">
                <div className="modal-header">
                  <h1 className="modal-title fs-5" id="updContactLabel">
                    Modifier contact
                  </h1>
                  <button
                    type="button"
                    className="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <form>
                  <div className="modal-body p-3">
                    <div className="row">
                      <div className="col-6">
                        <label htmlFor="nomToUpdateRef" className="form-label">
                          Nom
                        </label>
                        <input
                          type="text"
                          className="form-control"
                          defaultValue={nom}
                          ref={nomToUpdateRef}
                        />
                      </div>
                      <div className="col-6">
                        <label htmlFor="telToUpdateRef" className="form-label">
                          Téléphone
                        </label>
                        <input
                          type="tel"
                          className="form-control"
                          defaultValue={telephone}
                          ref={telToUpdateRef}
                        />
                      </div>
                    </div>
                  </div>
                  <div className="modal-footer">
                    <button className="btn btn-dark " onClick={updateContact}>
                      Modifier
                    </button>

                    <button className="btn btn-primary" data-bs-dismiss="modal">
                      Annuler
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>

        <table className="table ">
          <thead>
            <tr>
              {/* <th>#</th> */}
              <th className="col-7">Nom</th>
              <th className="col-7">Téléphone</th>
              <th colSpan={2}></th>
            </tr>
          </thead>
          <tbody>
            {contact.map((item, index) => {
              return (
                <tr key={item.id}>
                  {/* <td>{item.id}</td> */}
                  <td>{item.nom}</td>
                  <td>{item.telephone}</td>

                  <td>
                    {" "}
                    <button
                      onClick={() =>
                        getChamps(item.id, item.nom, item.telephone)
                      }
                      className="btn btn-success h-25"
                      data-bs-toggle="modal"
                      data-bs-target="#updContact"
                    >
                      Modifier
                    </button>
                  </td>
                  <td>
                    <button
                      className="btn btn-danger h-25"
                      onClick={() => deleteContact(item.id)}
                    >
                      Supprimer
                    </button>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </>
  );
}
